<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="9" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-12T12:08:18Z" name="WELLAutomation" finished-at="2022-09-12T12:09:32Z" duration-ms="73627">
    <groups>
    </groups>
    <test started-at="2022-09-12T12:08:18Z" name="WELL-Tests" finished-at="2022-09-12T12:09:32Z" duration-ms="73627">
      <class name="com.Well.testcases.HealthSafety.TC_02_RegisterHealthSafetyTest">
        <test-method is-config="true" signature="ExtentReportConfig()[pri:0, instance:com.Well.testcases.HealthSafety.TC_02_RegisterHealthSafetyTest@7f485fda]" started-at="2022-09-12T12:08:29Z" name="ExtentReportConfig" finished-at="2022-09-12T12:08:29Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExtentReportConfig -->
        <test-method signature="TC_02_RegisterPortfolio(java.lang.String, int)[pri:0, instance:com.Well.testcases.HealthSafety.TC_02_RegisterHealthSafetyTest@7f485fda]" started-at="2022-09-12T12:08:29Z" name="TC_02_RegisterPortfolio" finished-at="2022-09-12T12:09:06Z" duration-ms="37906" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hsr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_02_RegisterPortfolio -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.Well.testcases.HealthSafety.TC_02_RegisterHealthSafetyTest@7f485fda]" started-at="2022-09-12T12:09:06Z" name="getResult" finished-at="2022-09-12T12:09:06Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_02_RegisterPortfolio status=SUCCESS method=TC_02_RegisterHealthSafetyTest.TC_02_RegisterPortfolio(java.lang.String, int)[pri:0, instance:com.Well.testcases.HealthSafety.TC_02_RegisterHealthSafetyTest@7f485fda] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:com.Well.testcases.HealthSafety.TC_02_RegisterHealthSafetyTest@7f485fda]" started-at="2022-09-12T12:09:06Z" name="flushReport" finished-at="2022-09-12T12:09:07Z" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- com.Well.testcases.HealthSafety.TC_02_RegisterHealthSafetyTest -->
      <class name="com.Well.testcases.HealthSafety.TC_03_HsrPaymentTest">
        <test-method is-config="true" signature="ExtentReportConfig()[pri:0, instance:com.Well.testcases.HealthSafety.TC_03_HsrPaymentTest@28261e8e]" started-at="2022-09-12T12:09:07Z" name="ExtentReportConfig" finished-at="2022-09-12T12:09:07Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExtentReportConfig -->
        <test-method signature="TC_03_HsrPayment(java.lang.String, int)[pri:0, instance:com.Well.testcases.HealthSafety.TC_03_HsrPaymentTest@28261e8e]" started-at="2022-09-12T12:09:07Z" name="TC_03_HsrPayment" finished-at="2022-09-12T12:09:31Z" duration-ms="24188" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hsr]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Index 1 out of bounds for length 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Index 1 out of bounds for length 1
at com.Well.ReusableMethods.ReusableMethodsHealthSafety.StoreIdHealthSafety(ReusableMethodsHealthSafety.java:66)
at com.Well.testcases.HealthSafety.TC_03_HsrPaymentTest.TC_03_HsrPayment(TC_03_HsrPaymentTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_03_HsrPayment -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.Well.testcases.HealthSafety.TC_03_HsrPaymentTest@28261e8e]" started-at="2022-09-12T12:09:31Z" name="getResult" finished-at="2022-09-12T12:09:31Z" duration-ms="742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_03_HsrPayment status=FAILURE method=TC_03_HsrPaymentTest.TC_03_HsrPayment(java.lang.String, int)[pri:0, instance:com.Well.testcases.HealthSafety.TC_03_HsrPaymentTest@28261e8e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:com.Well.testcases.HealthSafety.TC_03_HsrPaymentTest@28261e8e]" started-at="2022-09-12T12:09:31Z" name="flushReport" finished-at="2022-09-12T12:09:32Z" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
      </class> <!-- com.Well.testcases.HealthSafety.TC_03_HsrPaymentTest -->
      <class name="com.Well.testcases.login.TC_01_LoginTest">
        <test-method is-config="true" signature="setup(java.lang.String, java.lang.String)[pri:0, instance:com.Well.testcases.login.TC_01_LoginTest@4b29d1d2]" started-at="2022-09-12T12:08:05Z" name="setup" finished-at="2022-09-12T12:08:18Z" duration-ms="12868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Test]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="ExtentReportConfig()[pri:0, instance:com.Well.testcases.login.TC_01_LoginTest@4b29d1d2]" started-at="2022-09-12T12:08:18Z" name="ExtentReportConfig" finished-at="2022-09-12T12:08:19Z" duration-ms="628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExtentReportConfig -->
        <test-method signature="TC_01_Login()[pri:0, instance:com.Well.testcases.login.TC_01_LoginTest@4b29d1d2]" started-at="2022-09-12T12:08:19Z" name="TC_01_Login" finished-at="2022-09-12T12:08:28Z" duration-ms="9254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_01_Login -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.Well.testcases.login.TC_01_LoginTest@4b29d1d2]" started-at="2022-09-12T12:08:28Z" name="getResult" finished-at="2022-09-12T12:08:28Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_01_Login status=SUCCESS method=TC_01_LoginTest.TC_01_Login()[pri:0, instance:com.Well.testcases.login.TC_01_LoginTest@4b29d1d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="flushReport()[pri:0, instance:com.Well.testcases.login.TC_01_LoginTest@4b29d1d2]" started-at="2022-09-12T12:08:28Z" name="flushReport" finished-at="2022-09-12T12:08:29Z" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReport -->
        <test-method is-config="true" signature="quit()[pri:0, instance:com.Well.testcases.login.TC_01_LoginTest@4b29d1d2]" started-at="2022-09-12T12:09:32Z" name="quit" finished-at="2022-09-12T12:09:32Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method is-config="true" signature="end()[pri:0, instance:com.Well.testcases.login.TC_01_LoginTest@4b29d1d2]" started-at="2022-09-12T12:09:32Z" name="end" finished-at="2022-09-12T12:09:33Z" duration-ms="900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
      </class> <!-- com.Well.testcases.login.TC_01_LoginTest -->
    </test> <!-- WELL-Tests -->
  </suite> <!-- WELLAutomation -->
</testng-results>
